{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","baseUrl","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","target","type","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"6NAiBeA,EAbF,SAAAC,GACb,IADiBC,EACjBD,EADiBC,KAAMC,EACvBF,EADuBE,iBAEfC,EAAQF,EAAKG,UACf,mBAAqB,iBAEzB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACVP,EAAKQ,QACPJ,EAAAC,EAAAC,cAAA,UAAQG,QAAUR,GAAqBC,KCXvCQ,EAAU,8CAoBDC,EAlBA,WAGX,OADgBC,IAAMC,IAAIH,GACXI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAe9BL,EAZA,SAAAM,GAGX,OADgBL,IAAMM,KAAKR,EAASO,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAS9BL,EANA,SAACQ,EAAIF,GAGhB,OADgBL,IAAMQ,IAAN,GAAAC,OAAaX,EAAb,KAAAW,OAAwBF,GAAMF,GAC/BH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCF9BM,EAdM,SAAAvB,GACrB,IADyBwB,EACzBxB,EADyBwB,QAErB,OAAiB,OAAZA,EAEM,KAIPnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACTgB,ICLRC,EAAS,WAQb,OACEpB,EAAAC,EAAAC,cAAA,OAAKmB,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKRxB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qFAwHSuB,EAlHH,WACZ,IAAAC,EAC4BC,mBAAS,IADrCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACSK,EADTH,EAAA,GACgBI,EADhBJ,EAAA,GAAAK,EAEgCN,mBAAS,IAFzCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAESE,EAFTD,EAAA,GAEkBE,EAFlBF,EAAA,GAAAG,EAGgCV,oBAAS,GAHzCW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGSE,EAHTD,EAAA,GAGkBE,EAHlBF,EAAA,GAAAG,EAI0Cd,mBAAS,MAJnDe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAISE,EAJTD,EAAA,GAIuBE,EAJvBF,EAAA,GAmBEG,oBAVa,WAEXC,IAEGpC,KAAK,SAAAqC,GAEJf,EAASe,MAIC,IAChBC,QAAQC,IAAI,SAAUlB,EAAMmB,OAAQ,SAGpC,IAAMC,EAAcZ,EAChBR,EACAA,EAAMqB,OAAO,SAAAxD,GAAI,OAAIA,EAAKG,YA8D9B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAACmD,EAAD,CAAclC,QAASwB,IAEvB3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMmC,GAAYD,KAAnC,eACSA,EAAU,qBAAiB,WAGtCvC,EAAAC,EAAAC,cAAA,UA5CeiD,EAAYG,IAAI,SAAA1D,GAAI,OACrCI,EAAAC,EAAAC,cAACqD,EAAD,CACEC,IAAK5D,EAAKmB,GACVnB,KAAMA,EACNC,iBAAkB,kBA9BK,SAAAkB,GAEhB,+BAAAE,OAAkCF,GAA3C,IACMnB,EAAOmC,EAAM0B,KAAK,SAAAC,GAAC,OAAIA,EAAE3C,KAAOA,IAChC4C,EAAW9B,OAAA+B,EAAA,EAAA/B,CAAA,GAAOjC,EAAP,CAAaG,WAAYH,EAAKG,YAE/C+C,EACU/B,EAAI4C,GACXjD,KAAK,SAAAmD,GAEJ7B,EAASD,EAAMuB,IAAI,SAAA1D,GAAI,OAAIA,EAAKmB,KAAOA,EAAKnB,EAAOiE,OAClDC,MAAM,SAAAC,GAGPnB,EAAe,SAAA3B,OACJrB,EAAKQ,QADD,sCAGf4D,WAAW,WAETpB,EAAgB,OACf,KACHZ,EAASD,EAAMqB,OAAO,SAAAM,GAAC,OAAIA,EAAE3C,KAAOA,OASdkD,CAAmBrE,EAAKmB,UA2ChDf,EAAAC,EAAAC,cAAA,QAAMgE,SAtCM,SAACC,GAEfA,EAAMC,iBACN,IAAMC,EAAa,CACjBjE,QAAS+B,EACTmC,MAAM,IAAIC,MAAOC,cACjBzE,UAAW0E,KAAKC,SAAW,GAC3B3D,GAAIgB,EAAMmB,OAAS,GAGrBJ,EACUuB,GACP3D,KAAK,SAAAmD,GAEJ7B,EAASD,EAAMd,OAAO4C,IACtBzB,EAAW,QAwBXpC,EAAAC,EAAAC,cAAA,SACEyE,MAAOxC,EACPyC,SAtBiB,SAACT,GAExB/B,EAAW+B,EAAMU,OAAOF,UAsBpB3E,EAAAC,EAAAC,cAAA,UAAQ4E,KAAK,UAAb,aAEF9E,EAAAC,EAAAC,cAAC6E,EAAD,cC9HNC,IAASC,OACPjF,EAAAC,EAAAC,cAACgF,EAAD,MACAC,SAASC,eAAgB","file":"static/js/main.63f4141a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nconst Note = ( { note, toggleImportance } ) =>\r\n{\r\n  const label = note.important\r\n    ? 'Make unimportant' : 'Make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      { note.content }\r\n      <button onClick={ toggleImportance }>{ label }</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = 'http://hy-fullstack.herokuapp.com/api/notes'\r\n\r\nconst getAll = () =>\r\n{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject =>\r\n{\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) =>\r\n{\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update}","import React from 'react'\r\n\r\nconst Notification = ( { message } ) =>\r\n{\r\n    if ( message === null )\r\n    {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            { message }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\n\r\nconst Footer = () =>\r\n{\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst App = () =>\r\n{\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const link = 'http://localhost:3100/notes'\r\n\r\n  //Effect\r\n  const hook = () =>\r\n  {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes =>\r\n      {\r\n        setNotes(initialNotes)\r\n      })\r\n  }\r\n\r\n  useEffect(hook, [])\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  //Handle filtering for showing all/importants only\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  //Change the importance of the note\r\n  const toggleImportanceOf = id =>\r\n  {\r\n    const url = `http://localhost:3100/notes/${id}`\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important}\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote =>\r\n      {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      }).catch(error =>\r\n      {\r\n\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() =>\r\n        {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  //Map the notes to rows that will be shown\r\n  const rows = () => notesToShow.map(note =>\r\n    <Note\r\n      key={note.id}\r\n      note={note}\r\n      toggleImportance={() => toggleImportanceOf(note.id)}\r\n    />\r\n  )\r\n\r\n  //Add note to the notelist and to the server\r\n  const addNote = (event) =>\r\n  {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote =>\r\n      {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) =>\r\n  {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Muistiinpanot</h1>\r\n\r\n      <Notification message={errorMessage} />\r\n\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          n채yt채 {showAll ? 'vain t채rke채t' : 'kaikki'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {rows()}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">tallenna</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById( 'root' )\r\n)\r\n"],"sourceRoot":""}